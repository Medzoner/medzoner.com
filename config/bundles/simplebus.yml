parameters:
  app.command_queue: 'medzoner_commands'
  app.event_queue: 'medzoner_events'

simple_bus_rabbit_mq_bundle_bridge:
  commands:
    producer_service_id: 'old_sound_rabbit_mq.asynchronous_commands_producer'
  events:
    producer_service_id: 'old_sound_rabbit_mq.asynchronous_events_producer'

simple_bus_asynchronous:
  events:
    strategy: 'always'

old_sound_rabbit_mq:
  connections:
    default:
      host:     '%rabbitmq_host%'
      port:     '%rabbitmq_port%'
      user:     '%rabbitmq_user%'
      password: '%rabbitmq_password%'
      vhost:    '%rabbitmq_vhost%'
      lazy:     false
      connection_timeout: 3
      read_write_timeout: 3

      # requires php-amqplib v2.4.1+ and PHP5.4+
      keepalive: false

      # requires php-amqplib v2.4.1+
      heartbeat: 0
  producers:
    asynchronous_commands:
      connection:       'default'
      exchange_options: { name: '%app.command_queue%', type: "direct" }

    asynchronous_events:
      connection:       'default'
      exchange_options: { name: '%app.event_queue%', type: "direct" }

  consumers:
    asynchronous_commands:
      connection:       'default'
      exchange_options: { name: '%app.command_queue%', type: 'direct' }
      queue_options:    { name: '%app.command_queue%' }
      callback:         'simple_bus.rabbit_mq_bundle_bridge.commands_consumer'

    asynchronous_events:
      connection:       default
      exchange_options: { name: '%app.event_queue%', type: 'direct' }
      queue_options:    { name: '%app.event_queue%' }
      callback:         'simple_bus.rabbit_mq_bundle_bridge.events_consumer'

services:
  ##### CONSUMERS ######
  # Event Consumer
  simple_bus.rabbit_mq_bundle_bridge.events_consumer:
    class: 'Medzoner\GlobalBundle\SimpleBus\Consumer\MessageConsumer'
    public: true
    arguments:
      - '@simple_bus.asynchronous.standard_serialized_event_envelope_consumer'
      - '@event_dispatcher'
      - '@monolog.logger'
      - '@doctrine.orm.entity_manager'

  # Command Consumer
  simple_bus.rabbit_mq_bundle_bridge.commands_consumer:
    class: 'Medzoner\GlobalBundle\SimpleBus\Consumer\MessageConsumer'
    public: true
    arguments:
      - '@simple_bus.asynchronous.standard_serialized_command_envelope_consumer'
      - '@event_dispatcher'
      - '@monolog.logger'
      - '@doctrine.orm.entity_manager'

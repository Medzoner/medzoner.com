version: '3'

services:

    db:
        image: "mariadb"
        container_name: "medzoner-mariadb"
        hostname: "medzoner-mariadb"
        restart: "no"
        #user: "1000:1000"
        environment:
            MYSQL_ROOT_PASSWORD: "toor"
        ports:
            - "3307:3306"
        volumes:
            - "./var/mysql:/var/lib/mysql"
        networks:
            - "default"

    #mongo
    mongo-medzoner:
        image: "mongo"
        container_name: "mongo-medzoner"
        restart: "always"
        networks:
            - "default"

    #nginx
    nginx:
        image: "nginx:1.11"
        container_name: "medzoner-nginx"
        hostname: "medzoner-nginx"
        depends_on:
            - "php"
        restart: "no"
        ports:
            - "80:80"
        environment:
            USER_UID: "1000"
            USER_GID: "1000"
            PHP_HOST: "medzoner-php"
        networks:
            - "default"
        volumes:
            - "medzoner:/var/www"
            - './etc/nginx/conf.d/default.dev.conf:/etc/nginx/conf.d/default.conf'
            - './etc/nginx/nginx.conf:/etc/nginx/nginx.conf'

    php:
        build: "./docker/php"
        container_name: "medzoner-php"
        restart: "no"
        working_dir: "/var/www"
        depends_on:
            - "db"
        volumes:
            - "medzoner:/var/www"
        networks:
            - "default"
        extra_hosts:
            - "medzoner.local:${REMOTE_HOST}"

    #rabbitmq
    rabbitmq-medzoner:
        build: "./docker/rabbitmq"
        container_name: "rabbitmq-medzoner"
        restart: "always"
        ports:
            - "15671:15671"
            - "15672:15672"
        environment:
          RABBITMQ_DEFAULT_USER: "rabbitmq"
          RABBITMQ_DEFAULT_PASS: "rabbitmq"
        networks:
            - "default"

    #varnish
    varnish-medzoner:
        build: ./docker/varnish
        container_name: "varnish-medzoner"
        restart: "always"
        ports:
        - "${HTTP_PORT}:80"
        networks:
            - "default"
        volumes:
          - "./etc/varnish/default.vcl:/etc/varnish/default.vcl:ro"

##networks
networks:
  default:
    driver: "bridge"

volumes:
    db: {}
    medzoner:
      driver_opts:
        type: none
        device: $PWD
        o: bind

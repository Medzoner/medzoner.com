pipeline:



    app-deploy2:
        image: quay.io/honestbee/drone-kubernetes
        group: deploy # parallel
        kubernetes_server: ${KUBERNETES_SERVER}
        kubernetes_cert: ${KUBERNETES_CERT}
        kubernetes_token: ${KUBERNETES_TOKEN}
        deployment: medzoner
        repo: registry.medzoner.com/medzoner/medzoner.com
        container: medzoner-php
        tag: ${DRONE_COMMIT_SHA:0:8}




    #cdn:
    #    image: node
    #    group: test # parallel
    #    commands:
    #      - npm install
    #      - npm install -g bower karma gulp
    #      - gulp

    app:
        image: medzoner/medzoner_php
        group: test # parallel
        commands:
          - apt-get update
          - apt-get install -y --force-yes nginx curl
          - composer install
          - ./bin/phpunit -c app
          - rm -rf ./vendor
          - composer install -n --no-dev --optimize-autoloader --no-progress

    #cdn-build:
    #    image: plugins/docker
    #    group: build # parallel
    #    repo: registry.medzoner.com/medzoner/cdn.medzoner.com
    #    dockerfile: DockerfileCdn
    #    secrets: [ docker_username, docker_password ]
    #    registry: registry.medzoner.com
    #    debug: true
    #    tag:
    #        - ${DRONE_COMMIT_SHA:0:8}

    app-build:
        image: plugins/docker
        group: build # parallel
        repo: registry.medzoner.com/medzoner/medzoner.com
        dockerfile: Dockerfile
        secrets: [ docker_username, docker_password ]
        registry: registry.medzoner.com
        debug: true
        tag:
            - ${DRONE_COMMIT_SHA:0:8}

    app-deploy:
        image: quay.io/honestbee/drone-kubernetes
        group: deploy # parallel
        kubernetes_server: ${KUBERNETES_SERVER}
        kubernetes_cert: ${KUBERNETES_CERT}
        kubernetes_token: ${KUBERNETES_TOKEN}
        deployment: medzoner
        repo: registry.medzoner.com/medzoner/medzoner.com
        container: medzoner-php
        tag: ${DRONE_COMMIT_SHA:0:8}
